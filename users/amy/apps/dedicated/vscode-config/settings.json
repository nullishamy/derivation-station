{
    "catppuccin.customUIColors": {
        "all": {
            "statusBar.foreground": "accent",
            "statusBar.noFolderForeground": "accent"
        }
    },
    "editor.tabCompletion": "off",
    "editor.acceptSuggestionOnEnter": "on",
    "rust-analyzer.cargo.extraEnv": {
        "CARGO_NET_GIT_FETCH_WITH_CLI": "true",
        // "CARGO_HOME": "/home/amy/.local/share/cargo"
    },
    "rust-analyzer.server.path": "rust-analyzer",
    "editor.bracketPairColorization.enabled": true,
    "editor.fontFamily": "FantasqueSansM Nerd Font",
    "editor.inlineSuggest.enabled": true,
    "editor.lineNumbers": "relative",
    "extensions.autoUpdate": false,
    "extensions.ignoreRecommendations": true,
    "files.autoSave": "afterDelay",
    "git.autofetch": false,
    "redhat.telemetry.enabled": false,
    "telemetry.telemetryLevel": "off",
    "terminal.integrated.fontSize": 15,
    "update.mode": "none",
    "vim.enableNeovim": true,
    "vim.camelCaseMotion.enable": true,
    "vim.handleKeys": {
        "<C-a>": true,
        "<C-d>": true,
        "<C-u>": true,
        "<C-v>": true,
        "<C-w>": true,
        "<C-x>": true
    },
    "vim.smartRelativeLine": true,
    "vim.highlightedyank.color": "rgba(127; 128, 128, 0.8)",
    "vim.highlightedyank.enable": true,
    "vim.hlsearch": false,
    "vim.incsearch": true,
    "vim.insertModeKeyBindings": [
        {
            "after": [
                "<Esc>"
            ],
            "before": [
                "j",
                "k"
            ]
        },
        {
            "before": [
                "<C-Space>"
            ],
            "commands": [
                "editor.action.triggerSuggest"
            ]
        }
    ],
    "vim.leader": "<space>",
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": [
                "<leader>",
                "n"
            ],
            "commands": [
                "editor.action.marker.next"
            ]
        },
        {
            "before": [
                "<leader>",
                "p"
            ],
            "commands": [
                "editor.action.marker.prev"
            ]
        },
        {
            "before": [
                "<leader>",
                "f",
                "a"
            ],
            "commands": [
                "workbench.action.showAllSymbols"
            ]
        },
        {
            "before": [
                "<leader>",
                "f",
                "s"
            ],
            "commands": [
                "workbench.action.gotoSymbol"
            ]
        },
        {
            "before": [
                "<leader>",
                "f",
                "r"
            ],
            "commands": [
                "workbench.action.quickOpenRecent"
            ]
        },
        {
            "before": [
                "<leader>",
                "r",
                "n"
            ],
            "commands": [
                "editor.action.rename"
            ]
        },
        {
            "before": [
                "<C-Space>"
            ],
            "commands": [
                "editor.action.showHover"
            ]
        },
        {
            "before": [
                "<leader>",
                "c",
                "a"
            ],
            "commands": [
                "editor.action.quickFix"
            ]
        },
        {
            "before": [
                "<leader>",
                "l"
            ],
            "after": [
                "<C-W>",
                "l"
            ]
        },
        {
            "before": [
                "<leader>",
                "g"
            ],
            "commands": [
                "workbench.view.explorer"
            ]
        },
        {
            "before": [
                "<leader>",
                "h"
            ],
            "after": [
                "<C-W>",
                "h"
            ]
        },
        {
            "before": [
                "<leader>",
                "f",
                "f"
            ],
            "commands": [
                "workbench.action.quickOpen"
            ]
        },
        {
            "before": [
                "<leader>",
                "f",
                "t"
            ],
            "commands": [
                "workbench.action.selectTheme"
            ]
        },
        {
            "before": [
                "leader",
                "f",
                "g"
            ],
            "commands": [
                "workbench.view.search"
            ]
        },
        {
            "before": [
                "<leader>",
                "y"
            ],
            "commands": [
                "editor.action.formatDocument"
            ]
        },
        {
            "after": [
                "<C-W>",
                "l"
            ],
            "before": [
                "<C-l>"
            ]
        },
        {
            "after": [
                "<C-W>",
                "h"
            ],
            "before": [
                "<C-h>"
            ]
        },
        {
            "after": [
                "<C-W>",
                "v"
            ],
            "before": [
                "<C-W>",
                "\\"
            ]
        },
        {
            "after": [
                "<C-W>",
                "s"
            ],
            "before": [
                "<C-W>",
                "-"
            ]
        },
        {
            "commands": [
                "editor.action.moveLinesDownAction"
            ],
            "before": [
                "<C-j>"
            ]
        },
        {
            "commands": [
                "editor.action.moveLinesUpAction"
            ],
            "before": [
                "<C-k>"
            ]
        },
        {
            "after": [
                "$"
            ],
            "before": [
                "L"
            ]
        },
        {
            "after": [
                "^"
            ],
            "before": [
                "H"
            ]
        },
        {
            "before": [
                "J"
            ],
            "after": [
                "1",
                "0",
                "j"
            ]
        },
        {
            "before": [
                "K"
            ],
            "after": [
                "1",
                "0",
                "k"
            ]
        },
        // vim-cutlass implementation
        {
            "before": [
                "D"
            ],
            "after": [
                "\"",
                "_",
                "D"
            ]
        },
        {
            "before": [
                "d"
            ],
            "after": [
                "\"",
                "_",
                "d"
            ]
        },
        {
            "before": [
                "d",
                "d"
            ],
            "after": [
                "\"",
                "_",
                "d",
                "d"
            ]
        },
        {
            "before": [
                "c"
            ],
            "after": [
                "\"",
                "_",
                "c"
            ]
        },
        {
            "before": [
                "C"
            ],
            "after": [
                "\"",
                "_",
                "C"
            ]
        },
        {
            "before": [
                "c",
                "c"
            ],
            "after": [
                "\"",
                "_",
                "c",
                "c"
            ]
        },
        // "move"/"cut" remap
        {
            "before": [
                "x"
            ],
            "after": [
                "d"
            ]
        },
        {
            "before": [
                "x",
                "x"
            ],
            "after": [
                "d",
                "d"
            ]
        }
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "after": [
                "$"
            ],
            "before": [
                "L"
            ]
        },
        {
            "after": [
                "^"
            ],
            "before": [
                "H"
            ]
        },
        {
            "before": [
                "J"
            ],
            "after": [
                "1",
                "0",
                "j"
            ]
        },
        {
            "before": [
                "K"
            ],
            "after": [
                "1",
                "0",
                "k"
            ]
        },
        {
            "before": [
                "d"
            ],
            "after": [
                "\"",
                "_",
                "d"
            ]
        },
        {
            "before": [
                "c"
            ],
            "after": [
                "\"",
                "_",
                "c"
            ]
        },
        {
            "before": [
                "x"
            ],
            "after": [
                "d"
            ]
        },
        {
            "commands": [
                "editor.action.moveLinesDownAction"
            ],
            "before": [
                "<C-j>"
            ]
        },
        {
            "commands": [
                "editor.action.moveLinesUpAction"
            ],
            "before": [
                "<C-k>"
            ]
        }
    ],
    "vim.operatorPendingModeKeyBindingsNonRecursive": [
        {
            "after": [
                "$"
            ],
            "before": [
                "L"
            ]
        },
        {
            "after": [
                "^"
            ],
            "before": [
                "H"
            ]
        }
    ],
    "vim.replaceWithRegister": true,
    "vim.useSystemClipboard": false,
    "window.titleBarStyle": "custom",
    "editor.fontSize": 18,
    "better-comments.highlightPlainText": true,
    "better-comments.tags": [
        {
            "tag": "!",
            "color": "#FF2D00",
            "strikethrough": false,
            "underline": false,
            "backgroundColor": "transparent",
            "bold": false,
            "italic": false
        },
        {
            "tag": "?",
            "color": "#3498DB",
            "strikethrough": false,
            "underline": false,
            "backgroundColor": "transparent",
            "bold": false,
            "italic": false
        },
        {
            "tag": "//",
            "color": "#474747",
            "strikethrough": true,
            "underline": false,
            "backgroundColor": "transparent",
            "bold": false,
            "italic": false
        },
        {
            "tag": "todo",
            "color": "#FF8C00",
            "strikethrough": false,
            "underline": false,
            "backgroundColor": "transparent",
            "bold": false,
            "italic": false
        },
        {
            "tag": "fixme",
            "color": "#e53737",
            "strikethrough": false,
            "underline": false,
            "backgroundColor": "transparent",
            "bold": false,
            "italic": false
        },
        {
            "tag": "hack",
            "color": "#e53737",
            "strikethrough": false,
            "underline": false,
            "backgroundColor": "transparent",
            "bold": false,
            "italic": false
        },
        {
            "tag": "*",
            "color": "#98C379",
            "strikethrough": false,
            "underline": false,
            "backgroundColor": "transparent",
            "bold": false,
            "italic": false
        }
    ],
    "editor.minimap.enabled": false,
    "[jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "Lua.telemetry.enable": false,
    "gitlens.statusBar.enabled": false,
    "vscord.app.name": "Visual Studio Code",
    "vscord.status.state.text.editing": "Working on {file_name}{file_extension}:{current_line}",
    "vscord.status.details.text.editing": "{problems_count} problems in workspace",
    "vscord.status.details.text.viewing": "{problems_count} problems in workspace",
    "vscord.status.state.text.debugging": "Debugging",
    "vscord.status.buttons.button1.git.inactive.url": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
    "vscord.status.buttons.button1.git.idle.url": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
    "vscord.status.buttons.button1.git.active.url": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
    "[typescript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[json]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "js/ts.implicitProjectConfig.checkJs": true,
    "javascript.preferences.importModuleSpecifier": "relative",
    "typescript.preferences.importModuleSpecifier": "relative",
    "typescript.updateImportsOnFileMove.enabled": "always",
    "cSpell.userWords": [
        "Iosevka"
    ],
    "problems.showCurrentInStatus": true,
    "cSpell.diagnosticLevel": "Hint",
    "cSpell.hideAddToDictionaryCodeActions": true,
    "terminal.integrated.cursorStyle": "line",
    "terminal.integrated.defaultProfile.linux": "zsh",
    "terminal.integrated.profiles.linux": {
        "Nushell": {
            "path": "nu"
        }
    },
    "[typescriptreact]": {
        "editor.defaultFormatter": "vscode.typescript-language-features"
    },
    "editor.linkedEditing": true,
    "[html]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[javascript]": {
        "editor.defaultFormatter": "vscode.typescript-language-features"
    },
    "catppuccin.italicComments": false,
    "editor.cursorBlinking": "smooth",
    "workbench.list.smoothScrolling": true,
    "editor.cursorSmoothCaretAnimation": "on",
    "editor.smoothScrolling": true,
    // https://github.com/antfu/vscode-file-nesting-config @ 80aae22fbf8e3c8d3bc0bbc635fccb03304cb11d
    "explorer.fileNesting.enabled": true,
    "explorer.fileNesting.expand": false,
    "explorer.fileNesting.patterns": {
        "*.asax": "$(capture).*.cs, $(capture).*.vb",
        "*.ascx": "$(capture).*.cs, $(capture).*.vb",
        "*.ashx": "$(capture).*.cs, $(capture).*.vb",
        "*.aspx": "$(capture).*.cs, $(capture).*.vb",
        "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
        "*.c": "$(capture).h",
        "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx",
        "*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",
        "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
        "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx",
        "*.cs": "$(capture).*.cs",
        "*.cshtml": "$(capture).cshtml.cs",
        "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
        "*.css": "$(capture).css.map, $(capture).*.css",
        "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx",
        "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
        "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
        "*.go": "$(capture)_test.go",
        "*.java": "$(capture).class",
        "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
        "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx",
        "*.master": "$(capture).*.cs, $(capture).*.vb",
        "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
        "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
        "*.mts": "$(capture).mts.map, $(capture).*.mts, $(capture)_*.mts",
        "*.pubxml": "$(capture).pubxml.user",
        "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
        "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
        "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
        "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx",
        "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
        "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
        "*.xaml": "$(capture).xaml.cs",
        "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js,+layout.gql",
        "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js,+page.gql",
        ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
        ".env": "*.env, .env.*, .envrc, env.d.ts",
        ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
        ".project": ".classpath",
        "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
        "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json",
        "I*.cs": "$(capture).cs",
        "Pipfile": ".editorconfig, .flake8, .isort.cfg, .python-version, Pipfile, Pipfile.lock, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
        "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
        "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
        "cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
        "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
        "default.nix": "shell.nix",
        "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
        "dockerfile": ".dockerignore, docker-compose.*, dockerfile*",
        "flake.nix": "flake.lock",
        "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
        "gemfile": ".ruby-version, gemfile.lock",
        "go.mod": ".air*, go.sum",
        "go.work": "go.work.sum",
        "hatch.toml": ".editorconfig, .flake8, .isort.cfg, .python-version, hatch.toml, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
        "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
        "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
        "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .nuxtignore, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
        "package.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, simple-git-hooks*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
        "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",
        "pyproject.toml": ".editorconfig, .flake8, .isort.cfg, .pdm-python, .pdm.toml, .python-version, MANIFEST.in, Pipfile, Pipfile.lock, hatch.toml, pdm.lock, poetry.lock, pyproject.toml, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, setup.py, tox.ini",
        "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
        "readme*": "authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*",
        "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
        "requirements.txt": ".editorconfig, .flake8, .isort.cfg, .python-version, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
        "rush.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, simple-git-hooks*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
        "setup.cfg": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, tox.ini",
        "setup.py": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, setup.py, tox.ini",
        "shims.d.ts": "*.d.ts",
        "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, webpack.config.*, windi.config.*",
        "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
        "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*"
    },
    "typescript.preferences.importModuleSpecifierEnding": "minimal",
    "explorer.confirmDelete": false,
    "editor.fontLigatures": true,
    "javascript.updateImportsOnFileMove.enabled": "never",
    "catppuccin.extraBordersEnabled": true,
    "workbench.colorTheme": "Catppuccin Mocha",
    "catppuccin.accentColor": "pink",
    "editor.tabSize": 2,
    "terminal.integrated.fontWeightBold": "normal",
    "typescript.inlayHints.enumMemberValues.enabled": true,
    "typescript.inlayHints.parameterNames.enabled": "literals",
    "editor.inlayHints.padding": true,
    "colorize.include": [
        "**/*.ini",
        "**/*.js",
        "**/*.mjs",
        "**/*.cjs",
        "**/*.ts",
        "**/*.json",
        "**/*.css",
        "**/*.scss",
        "**/*.sass",
        "**/*.less",
        "**/*.styl",
        "**/*.yaml",
        "**/*.yml",
        "**/*.tera",
    ],
    "catppuccin.boldKeywords": false,
    "catppuccin.italicKeywords": false,
    "colorize.colorized_colors": [
        "HEXA",
        "RGB",
        "HSL"
    ],
    "lldb.launch.preRunCommands": [
        "command script import /home/amy/.vscode/extensions/vadimcn.vscode-lldb/formatters/rust.py"
    ],
    "files.associations": {
        ".env*": "dotenv",
        "*.user.css": "less"
    },
    "editor.tokenColorCustomizations": {
        "textMateRules": [
            {
                "scope": "keyword.other.dotenv",
                "settings": {
                    "foreground": "#FF000000"
                }
            }
        ]
    },
    "dotenv.enableAutocloaking": true,
    "editor.inlayHints.enabled": "off",
    "catppuccin.workbenchMode": "flat",
    "kotlin.languageServer.enabled": false,
    "kotlin.debugAdapter.enabled": false,
    // Does actually exist, vscode is just a dumbass
    "rust-analyzer.checkOnSave.command": "clippy",
    "editor.codeLensFontFamily": "FantasqueSansM Nerd Font",
    "presentation-mode.active": {
        "commands": [
            "workbench.action.closeSidebar"
        ],
        "editor.fontSize": 24,
        "terminal.integrated.fontSize": 20,
        "editor.matchBrackets": "never",
        "editor.minimap.enabled": false,
        // "editor.scrollbar.verticalScrollbarSize": 0,
        // "workbench.activityBar.visible": false,
        // "workbench.statusBar.visible": false,
        "window.zoomLevel": 1
    },
    "zig.path": "",
    "zig.zls.path": "",
    "zig.initialSetupDone": true
}